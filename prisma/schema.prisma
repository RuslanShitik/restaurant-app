generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  password     String
  role         Role           @default(user)
  createdAt    DateTime       @default(now())
  favorites    Favorite[]
  oauthAccount OAuthAccount[]
  restaurants  Restaurant[]
  reviews      Review[]
}

model OAuthAccount {
  id             Int      @id @default(autoincrement())
  providerId     String
  providedUserId Int
  userId         Int
  createdAt      DateTime @default(now())
  user           User     @relation(fields: [userId], references: [id])

  @@unique([providerId, providedUserId])
}

model Restaurant {
  id            Int        @id @default(autoincrement())
  name          String
  description   String?
  address       String
  averageRating Float      @default(0)
  latitude      Float?
  longitude     Float?
  ownerId       Int
  createdAt     DateTime   @default(now())
  favorites     Favorite[]
  owner         User       @relation(fields: [ownerId], references: [id])
  reviews       Review[]
}

model Review {
  id           Int        @id @default(autoincrement())
  rating       Float
  comment      String?
  restaurantId Int
  userId       Int
  createdAt    DateTime   @default(now())
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  user         User       @relation(fields: [userId], references: [id])

  @@unique([userId, restaurantId])
}

model Favorite {
  id           Int        @id @default(autoincrement())
  userId       Int
  restaurantId Int
  createdAt    DateTime   @default(now())
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  user         User       @relation(fields: [userId], references: [id])

  @@unique([userId, restaurantId])
}

enum Role {
  user
  business
  admin
}
